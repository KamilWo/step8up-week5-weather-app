{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,AAAC,IAE7C,IAAM,EAAyB,SAAS,cAAc,CAAC,qBAEvD,SAAS,IACP,IAAM,EAAM,IAAI,KAIV,EAAgB,EAAI,kBAAkB,CAAC,QADzB,CAAC,MAAO,OAAQ,IAAK,UAAW,KAAM,SAAS,GAK7D,EAAgB,EAAI,kBAAkB,CAAC,QADzB,CAAC,KAAM,UAAW,OAAQ,UAAW,OAAQ,UAAW,OAAQ,CAAA,CAAI,EAGpF,CAAA,GACF,CAAA,EAAuB,WAAW,CAAG,CAAA,EAAG,EAAc,GAAG,EAAE,EAAA,CAAe,AAAf,CAE/D,CAGA,IAEA,YAAY,EAAgB,KAE5B,IAAM,EAAW,SAAS,aAAa,CAAC,cAEpC,IAGF,AAF0B,EAAS,aAAa,CAAC,wBAE/B,gBAAgB,CAAC,QAAS,AAAC,IAE3C,EAAM,eAAe,GAErB,EAAS,SAAS,CAAC,MAAM,CAAC,SAC5B,GAGA,SAAS,gBAAgB,CAAC,QAAS,KAC7B,EAAS,SAAS,CAAC,QAAQ,CAAC,WAC9B,EAAS,SAAS,CAAC,MAAM,CAAC,SAE9B,GAGA,SAAS,gBAAgB,CAAC,UAAW,AAAC,IAChC,AAAc,WAAd,EAAM,GAAG,EAAiB,EAAS,SAAS,CAAC,QAAQ,CAAC,WACxD,EAAS,SAAS,CAAC,MAAM,CAAC,SAE9B,IAGF,IAAI,EAAa,aAAa,OAAO,CAAC,sBAAwB,CAC9D,CAAA,IACA,aAAa,OAAO,CAAC,oBAAqB,GAC1C,SAAS,cAAc,CAAC,cAAc,WAAW,CAAG,CACtD","sources":["<anon>","src/assets/js/script.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", (event)=>{\n    // Date and Time Display\n    const currentDateTimeElement = document.getElementById('current-date-time');\n    function updateDateTime() {\n        const now = new Date();\n        // Format the date: e.g., \"July 12, 2025\"\n        const dateOptions = {\n            month: 'long',\n            day: 'numeric',\n            year: 'numeric'\n        };\n        const formattedDate = now.toLocaleDateString('en-GB', dateOptions);\n        // Format the time: e.g., \"03:30\"\n        const timeOptions = {\n            hour: '2-digit',\n            minute: '2-digit',\n            second: '2-digit',\n            hour24: true\n        };\n        const formattedTime = now.toLocaleTimeString('en-GB', timeOptions);\n        if (currentDateTimeElement) currentDateTimeElement.textContent = `${formattedDate} | ${formattedTime}`;\n    }\n    // Update the time immediately when the page loads\n    updateDateTime();\n    // Then, update the time every second (1000 milliseconds)\n    setInterval(updateDateTime, 1000);\n    const userMenu = document.querySelector('.user-menu');\n    if (userMenu) {\n        const userProfileButton = userMenu.querySelector('.user-profile-button');\n        userProfileButton.addEventListener('click', (event)=>{\n            // Stop the click from bubbling up to the document, which would close the menu\n            event.stopPropagation();\n            // Toggle the 'active' class to show/hide the dropdown\n            userMenu.classList.toggle('active');\n        });\n        // Add a listener to the whole document to close the menu if you click elsewhere\n        document.addEventListener('click', ()=>{\n            if (userMenu.classList.contains('active')) userMenu.classList.remove('active');\n        });\n        // Optional but recommended: Close the dropdown with the 'Escape' key\n        document.addEventListener('keydown', (event)=>{\n            if (event.key === 'Escape' && userMenu.classList.contains('active')) userMenu.classList.remove('active');\n        });\n    }\n    let visitCount = localStorage.getItem('websiteVisitCount') || 0;\n    visitCount++;\n    localStorage.setItem('websiteVisitCount', visitCount);\n    document.getElementById('visitCount').textContent = visitCount;\n});\n\n//# sourceMappingURL=weather-dashboard.b79db68c.js.map\n","document.addEventListener(\"DOMContentLoaded\", (event) => {\n  // Date and Time Display\n  const currentDateTimeElement = document.getElementById('current-date-time');\n\n  function updateDateTime() {\n    const now = new Date();\n\n    // Format the date: e.g., \"July 12, 2025\"\n    const dateOptions = {month: 'long', day: 'numeric', year: 'numeric'};\n    const formattedDate = now.toLocaleDateString('en-GB', dateOptions);\n\n    // Format the time: e.g., \"03:30\"\n    const timeOptions = {hour: '2-digit', minute: '2-digit', second: '2-digit', hour24: true};\n    const formattedTime = now.toLocaleTimeString('en-GB', timeOptions);\n\n    if (currentDateTimeElement) {\n      currentDateTimeElement.textContent = `${formattedDate} | ${formattedTime}`;\n    }\n  }\n\n  // Update the time immediately when the page loads\n  updateDateTime();\n  // Then, update the time every second (1000 milliseconds)\n  setInterval(updateDateTime, 1000);\n\n  const userMenu = document.querySelector('.user-menu');\n\n  if (userMenu) {\n    const userProfileButton = userMenu.querySelector('.user-profile-button');\n\n    userProfileButton.addEventListener('click', (event) => {\n      // Stop the click from bubbling up to the document, which would close the menu\n      event.stopPropagation();\n      // Toggle the 'active' class to show/hide the dropdown\n      userMenu.classList.toggle('active');\n    });\n\n    // Add a listener to the whole document to close the menu if you click elsewhere\n    document.addEventListener('click', () => {\n      if (userMenu.classList.contains('active')) {\n        userMenu.classList.remove('active');\n      }\n    });\n\n    // Optional but recommended: Close the dropdown with the 'Escape' key\n    document.addEventListener('keydown', (event) => {\n      if (event.key === 'Escape' && userMenu.classList.contains('active')) {\n        userMenu.classList.remove('active');\n      }\n    });\n  }\n\n  let visitCount = localStorage.getItem('websiteVisitCount') || 0;\n  visitCount++;\n  localStorage.setItem('websiteVisitCount', visitCount);\n  document.getElementById('visitCount').textContent = visitCount;\n});\n"],"names":["document","addEventListener","event","currentDateTimeElement","getElementById","updateDateTime","now","Date","formattedDate","toLocaleDateString","month","day","year","formattedTime","toLocaleTimeString","hour","minute","second","hour24","textContent","setInterval","userMenu","querySelector","userProfileButton","stopPropagation","classList","toggle","contains","remove","key","visitCount","localStorage","getItem","setItem"],"version":3,"file":"weather-dashboard.b79db68c.js.map"}