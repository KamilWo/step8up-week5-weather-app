{"mappings":"ACAA,SAAS,gBAAgB,CAAC,mBAAoB,KAE5C,IAAM,EAAc,SAAS,cAAc,CAAC,gBACtC,EAAe,SAAS,cAAc,CAAC,iBACvC,EAAgB,SAAS,cAAc,CAAC,kBACxC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAa,SAAS,cAAc,CAAC,SACrC,EAAoB,SAAS,cAAc,CAAC,iBAC5C,EAAsB,SAAS,cAAc,CAAC,uBAC9C,EAAmB,SAAS,cAAc,CAAC,sBAE3C,EAAc,oBAyChB,CAAA,GACF,EAAY,gBAAgB,CAAC,SAAU,AAAC,IACtC,EAAM,cAAc,GACpB,AA3BgB,CAAA,KAClB,GAAI,EAAW,KAAK,GAAK,EAAkB,KAAK,CAAE,CAChD,MAAM,sDACN,EAAkB,KAAK,GACvB,MACF,CAGA,IAAM,EAAiB,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,KAAiB,CAAC,EACnE,EAAY,EAAc,KAAK,CAAC,eAAe,CAAC,KAAK,CAAC,EAAG,IAEzD,EAAc,CAClB,SAAU,EAAc,KAAK,CAAC,IAAI,GAClC,MAAO,EAAW,KAAK,CAAC,IAAI,GAC5B,mBAAoB,EAAoB,OAAO,CAE/C,OAAQ,EAAU,UAAU,CAAC,cAAgB,EAAY,EAAe,MAAM,AAChF,EAEA,aAAa,OAAO,CAAC,EAAa,KAAK,SAAS,CAAC,IACjD,MAAM,sCACR,CAAA,GAOE,GAIE,GAAgB,GAClB,EAAa,gBAAgB,CAAC,SAAU,AAAC,IACvC,IAAM,EAAO,EAAM,MAAM,CAAC,KAAK,CAAC,EAAE,CAClC,GAAI,EAAM,CACR,IAAM,EAAS,IAAI,UACnB,CAAA,EAAO,MAAM,CAAG,AAAC,IACf,IAAM,EAAe,EAAE,MAAM,CAAC,MAAM,AACpC,CAAA,EAAc,KAAK,CAAC,eAAe,CAAG,CAAC,KAAK,EAAE,EAAa,EAAE,CAAC,CAG9D,IAAM,EAAU,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,KAAiB,CAAC,CAClE,CAAA,EAAQ,MAAM,CAAG,EACjB,aAAa,OAAO,CAAC,EAAa,KAAK,SAAS,CAAC,GACnD,EACA,EAAO,aAAa,CAAC,EACvB,CACF,GAIE,GACF,EAAiB,gBAAgB,CAAC,QAAS,KACrB,QAAQ,iFAG1B,aAAa,UAAU,CAAC,GACxB,aAAa,UAAU,CAAC,cACxB,MAAM,wDAEN,OAAO,QAAQ,CAAC,IAAI,CAAG,2BAE3B,GAGF,AAhFoB,CAAA,KAClB,IAAM,EAAe,KAAK,KAAK,CAAC,aAAa,OAAO,CAAC,IACjD,IACF,EAAc,KAAK,CAAG,EAAa,QAAQ,EAAI,gBAC/C,EAAW,KAAK,CAAG,EAAa,KAAK,EAAI,4BACzC,EAAkB,KAAK,CAAG,EAAa,KAAK,EAAI,4BAChD,EAAoB,OAAO,CAAG,EAAa,kBAAkB,EAAI,CAAA,EAC7D,EAAa,MAAM,EACrB,CAAA,EAAc,KAAK,CAAC,eAAe,CAAG,CAAC,KAAK,EAAE,EAAa,MAAM,CAAC,EAAE,CAAC,AAAD,EAG1E,CAAA,GAsEF","sources":["<anon>","src/assets/js/profile.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', ()=>{\n    // DOM Elements\n    const profileForm = document.getElementById('profile-form');\n    const avatarUpload = document.getElementById('avatar-upload');\n    const avatarPreview = document.getElementById('avatar-preview');\n    const usernameInput = document.getElementById('username');\n    const emailInput = document.getElementById('email');\n    const emailConfirmInput = document.getElementById('email-confirm');\n    const notificationsToggle = document.getElementById('email-notifications');\n    const deleteAccountBtn = document.getElementById('delete-account-btn');\n    const PROFILE_KEY = 'weatherDashProfile';\n    // Load profile data from localStorage\n    const loadProfile = ()=>{\n        const savedProfile = JSON.parse(localStorage.getItem(PROFILE_KEY));\n        if (savedProfile) {\n            usernameInput.value = savedProfile.username || 'Kamil Wozniak';\n            emailInput.value = savedProfile.email || 'kamil.wozniak@example.com';\n            emailConfirmInput.value = savedProfile.email || 'kamil.wozniak@example.com';\n            notificationsToggle.checked = savedProfile.emailNotifications ?? true; // Default to true if not set\n            if (savedProfile.avatar) avatarPreview.style.backgroundImage = `url('${savedProfile.avatar}')`;\n        }\n    };\n    // Save profile data to localStorage\n    const saveProfile = ()=>{\n        if (emailInput.value !== emailConfirmInput.value) {\n            alert('Email addresses do not match. Please correct them.');\n            emailConfirmInput.focus();\n            return;\n        }\n        // Get existing avatar from storage to avoid overwriting it if not changed\n        const currentProfile = JSON.parse(localStorage.getItem(PROFILE_KEY)) || {};\n        const newAvatar = avatarPreview.style.backgroundImage.slice(5, -2); // Extract URL\n        const profileData = {\n            username: usernameInput.value.trim(),\n            email: emailInput.value.trim(),\n            emailNotifications: notificationsToggle.checked,\n            // Use the new avatar if it's a data URL, otherwise keep the old one\n            avatar: newAvatar.startsWith('data:image') ? newAvatar : currentProfile.avatar\n        };\n        localStorage.setItem(PROFILE_KEY, JSON.stringify(profileData));\n        alert('Profile changes saved successfully!');\n    };\n    // Handle form submission\n    if (profileForm) profileForm.addEventListener('submit', (event)=>{\n        event.preventDefault();\n        saveProfile();\n    });\n    // Handle avatar preview and save it directly\n    if (avatarUpload && avatarPreview) avatarUpload.addEventListener('change', (event)=>{\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e)=>{\n                const newAvatarUrl = e.target.result;\n                avatarPreview.style.backgroundImage = `url('${newAvatarUrl}')`;\n                // Save avatar change immediately to localStorage\n                const profile = JSON.parse(localStorage.getItem(PROFILE_KEY)) || {};\n                profile.avatar = newAvatarUrl;\n                localStorage.setItem(PROFILE_KEY, JSON.stringify(profile));\n            };\n            reader.readAsDataURL(file);\n        }\n    });\n    // Handle account deletion\n    if (deleteAccountBtn) deleteAccountBtn.addEventListener('click', ()=>{\n        const isConfirmed = confirm('Are you sure you want to delete your account? This action cannot be undone.');\n        if (isConfirmed) {\n            // In a real app, you'd call a server. Here, we clear local data.\n            localStorage.removeItem(PROFILE_KEY);\n            localStorage.removeItem(SETTINGS_KEY); // Also clear settings\n            alert('Account data cleared from this browser! (Simulation)');\n            // Optionally, redirect the user\n            window.location.href = './weather-dashboard.html';\n        }\n    });\n    loadProfile();\n});\n\n//# sourceMappingURL=profile.1d9b8afd.js.map\n","document.addEventListener('DOMContentLoaded', () => {\n  // DOM Elements\n  const profileForm = document.getElementById('profile-form');\n  const avatarUpload = document.getElementById('avatar-upload');\n  const avatarPreview = document.getElementById('avatar-preview');\n  const usernameInput = document.getElementById('username');\n  const emailInput = document.getElementById('email');\n  const emailConfirmInput = document.getElementById('email-confirm');\n  const notificationsToggle = document.getElementById('email-notifications');\n  const deleteAccountBtn = document.getElementById('delete-account-btn');\n\n  const PROFILE_KEY = 'weatherDashProfile';\n\n  // Load profile data from localStorage\n  const loadProfile = () => {\n    const savedProfile = JSON.parse(localStorage.getItem(PROFILE_KEY));\n    if (savedProfile) {\n      usernameInput.value = savedProfile.username || 'Kamil Wozniak';\n      emailInput.value = savedProfile.email || 'kamil.wozniak@example.com';\n      emailConfirmInput.value = savedProfile.email || 'kamil.wozniak@example.com';\n      notificationsToggle.checked = savedProfile.emailNotifications ?? true; // Default to true if not set\n      if (savedProfile.avatar) {\n        avatarPreview.style.backgroundImage = `url('${savedProfile.avatar}')`;\n      }\n    }\n  };\n\n  // Save profile data to localStorage\n  const saveProfile = () => {\n    if (emailInput.value !== emailConfirmInput.value) {\n      alert('Email addresses do not match. Please correct them.');\n      emailConfirmInput.focus();\n      return;\n    }\n\n    // Get existing avatar from storage to avoid overwriting it if not changed\n    const currentProfile = JSON.parse(localStorage.getItem(PROFILE_KEY)) || {};\n    const newAvatar = avatarPreview.style.backgroundImage.slice(5, -2); // Extract URL\n\n    const profileData = {\n      username: usernameInput.value.trim(),\n      email: emailInput.value.trim(),\n      emailNotifications: notificationsToggle.checked,\n      // Use the new avatar if it's a data URL, otherwise keep the old one\n      avatar: newAvatar.startsWith('data:image') ? newAvatar : currentProfile.avatar,\n    };\n\n    localStorage.setItem(PROFILE_KEY, JSON.stringify(profileData));\n    alert('Profile changes saved successfully!');\n  };\n\n  // Handle form submission\n  if (profileForm) {\n    profileForm.addEventListener('submit', (event) => {\n      event.preventDefault();\n      saveProfile();\n    });\n  }\n\n  // Handle avatar preview and save it directly\n  if (avatarUpload && avatarPreview) {\n    avatarUpload.addEventListener('change', (event) => {\n      const file = event.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          const newAvatarUrl = e.target.result;\n          avatarPreview.style.backgroundImage = `url('${newAvatarUrl}')`;\n\n          // Save avatar change immediately to localStorage\n          const profile = JSON.parse(localStorage.getItem(PROFILE_KEY)) || {};\n          profile.avatar = newAvatarUrl;\n          localStorage.setItem(PROFILE_KEY, JSON.stringify(profile));\n        };\n        reader.readAsDataURL(file);\n      }\n    });\n  }\n\n  // Handle account deletion\n  if (deleteAccountBtn) {\n    deleteAccountBtn.addEventListener('click', () => {\n      const isConfirmed = confirm('Are you sure you want to delete your account? This action cannot be undone.');\n      if (isConfirmed) {\n        // In a real app, you'd call a server. Here, we clear local data.\n        localStorage.removeItem(PROFILE_KEY);\n        localStorage.removeItem(SETTINGS_KEY); // Also clear settings\n        alert('Account data cleared from this browser! (Simulation)');\n        // Optionally, redirect the user\n        window.location.href = './weather-dashboard.html';\n      }\n    });\n  }\n\n  loadProfile();\n});\n"],"names":["document","addEventListener","profileForm","getElementById","avatarUpload","avatarPreview","usernameInput","emailInput","emailConfirmInput","notificationsToggle","deleteAccountBtn","PROFILE_KEY","event","preventDefault","saveProfile","value","alert","focus","currentProfile","JSON","parse","localStorage","getItem","newAvatar","style","backgroundImage","slice","profileData","username","trim","email","emailNotifications","checked","avatar","startsWith","setItem","stringify","file","target","files","reader","FileReader","onload","e","newAvatarUrl","result","profile","readAsDataURL","confirm","removeItem","SETTINGS_KEY","window","location","href","loadProfile","savedProfile"],"version":3,"file":"profile.1d9b8afd.js.map"}